modules = ["nodejs-20", "web", "python-3.11", "python3", "postgresql-16"]
[agent]
expertMode = true
integrations = ["javascript_supabase:1.0.0", "javascript_stripe:1.0.0", "python_openai:1.0.0"]

[nix]
channel = "stable-25_05"
packages = ["cargo", "freetype", "glibcLocales", "lcms2", "libiconv", "libimagequant", "libjpeg", "libtiff", "libwebp", "libxcrypt", "openjpeg", "postgresql", "rustc", "tcl", "tk", "zlib"]

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Frontend Server"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Backend Server"

[[workflows.workflow]]
name = "Frontend Server"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd frontend && npm start"
waitForPort = 5000

[workflows.workflow.metadata]
outputType = "webview"

[[workflows.workflow]]
name = "Backend Server"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && python main_server.py"
waitForPort = 8000

[workflows.workflow.metadata]
outputType = "console"

[[ports]]
localPort = 5000
externalPort = 80

[[ports]]
localPort = 8000
externalPort = 8000

[deployment]
deploymentTarget = "autoscale"
run = ["bash", "-c", "cd frontend && npm run build && cd ../backend && python simple_server.py"]
build = ["npm", "run", "build"]
